@model DayOut.Models.DisplayRouteViewModel
@{
    ViewData["Title"] = "Surprise";
}
<style>

    #map {
        height: 800px; /* The height is 400 pixels */
        width: 100%; /* The width is the width of the web page */
    }

    .table_scroll {
        width: 100%;
        overflow-y: scroll;
        border-collapse: collapse;
        border-spacing: 0;
        height: 230px;
        display: block;
    }

    #rcorners2 {
        border-radius: 25px;
        border: 2px solid black;
        padding: 20px;
    }
</style>
<div class="row" style="padding-top:1em">
    <div class="col-md-4">
        <center>
            <div>
                <table class="table_scroll" style="height:650px;">
                    @for (int i = 0; i < Model.Places.Count; i++)
                    {
                        <tr>
                            <td style=" padding-top:1em; padding-right:1em">
                                <div class="row" style="padding-right:1em">
                                    <div class="col-md-2" style="padding:0.5em">
                                        <center>
                                            <h3><strong>@Html.Raw(Model.PlaceLetters[i])</strong></h3>
                                        </center>
                                    </div>
                                    @if (i == 0)
                                    {
                                        <div class="col-md-10" id="rcorners2" style="padding:0.5em">
                                            <span style="font-size:25px"><strong>@Html.Raw(Model.Places[i].Name)</strong></span>
                                            <br />
                                            <span style="font-size:15px">Address: @Html.Raw(Model.Places[i].Address)</span>
                                            <br />
                                            <span style="font-size:15px">Phone: @Html.Raw(Model.Places[i].PhoneNumber)</span>
                                            <br />
                                            <span style="font-size:15px">Rating: @Html.Raw(Model.Places[i].Rating)</span>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="col-md-10" id="rcorners2" style="padding:0.5em">
                                            <center>
                                                <h3><strong>Mystery</strong></h3>
                                                <h4>(Location revealed 30 min before departure!)</h4>
                                            </center>
                                        </div>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </center>
    </div>
    <div class="col-md-8">
        <center>
            <div>
                <div id="map" style="height:650px;"></div>
            </div>
        </center>
    </div>
</div>
<script>
    // Initialize and add the map
    function initMap() {
        // The location of Uluru
        var uluru = { lat: @Html.Raw(Model.Places[0].Latitude), lng: @Html.Raw(Model.Places[0].Longitude) };
        // The map, centered at Uluru
        var map = new google.maps.Map(
            document.getElementById('map'), { zoom: 14, center: uluru });
        // The marker, positioned at Uluru
        var marker = new google.maps.Marker({ position: uluru, map: map });
    }
</script>
<!--Load the API from the specified URL
* The async attribute allows the browser to render the page while the API loads
* The key parameter will contain your own API key (which is not needed for this tutorial)
* The callback parameter executes the initMap() function
-->
<script async defer
         src="https://maps.googleapis.com/maps/api/js?key=@Html.Raw(Model.GoogleAPI)&callback=initMap">
</script>