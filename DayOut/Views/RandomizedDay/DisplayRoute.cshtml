@model DayOut.Models.DisplayRouteViewModel
@{
    ViewData["Title"] = "DisplayRoute";
}


<!--The div element for the map -->

<style>
    #map {
        height: 800px; /* The height is 400 pixels */
        width: 100%; /* The width is the width of the web page */
    }
    .table_scroll {
        width: 100%;
        overflow-y: scroll;
        border-collapse: collapse;
        border-spacing: 0;
        height: 230px;
        display: block;
    }
    #rcorners2 {
        border-radius: 25px;
        border: 2px solid black;
        padding: 20px;
    }
</style>
<div class="row" style="padding-top:5em">
    <div class="col-md-4">
        <center>
            <div>
                <table class="table_scroll" style="height:800px;">
                    @for (int i = 0; i < Model.Places.Count; i++)
                    {
                        <tr>
                            <td style=" padding-top:1em; padding-right:1em">
                                <div class="row" style="padding-right:1em">
                                    <div class="col-md-2" style="padding:0.5em">
                                        <center>
                                            <h3><strong>@Html.Raw(Model.PlaceLetters[i])</strong></h3>
                                        </center>
                                    </div>
                                    <div class="col-md-10" id="rcorners2" style="padding:0.5em">
                                        <span style="font-size:25px"><strong>@Html.Raw(Model.Places[i].Name)</strong></span>
                                        <br />
                                        <span style="font-size:15px">Address: @Html.Raw(Model.Places[i].Address)</span>
                                        <br />
                                        <span style="font-size:15px">Phone: @Html.Raw(Model.Places[i].PhoneNumber)</span>
                                        <br />
                                        <span style="font-size:15px">Rating: @Html.Raw(Model.Places[i].Rating)</span>
                                    </div>
                                </div>

                            </td>
                        </tr>
                    }
                </table>
            </div>
        </center>
    </div>
    <div class="col-md-8">
        <center>
            <div>
                <div id="map"></div>
            </div>
        </center>
    </div>
</div>

<div hidden>
    <div>
        <select id="start">
            <option value=@Html.Raw(Model.Addresses[0])>Halifax, NS</option>
        </select>
        <select multiple id="waypoints">
            @for (int i = 1; i < Model.Addresses.Count - 1; i++)
            {
                <option value=@Html.Raw(Model.Addresses[i])></option>
            }
        </select>
        <select id="end">
            <option value=@Html.Raw(Model.Addresses[Model.Addresses.Count - 1])>Vancouver, BC</option>
        </select>
    </div>
    <div id="directions-panel"></div>
</div>

<script type="text/javascript">
    function initMap() {
        var directionsService = new google.maps.DirectionsService;
        var directionsDisplay = new google.maps.DirectionsRenderer;
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 6,
            center: { lat: 41.85, lng: -87.65 }
        });
        directionsDisplay.setMap(map);
        calculateAndDisplayRoute(directionsService, directionsDisplay);
    }

    function calculateAndDisplayRoute(directionsService, directionsDisplay) {
        var waypts = [];
        @*var pre = '@Html.Raw(Json.Serialize(Model.Addresses))';
        var checkboxArrayTest = JSON.parse(pre);
        var checkboxArrayHard = ["montreal, quebec", "toronto, ont"];*@
        var checkboxArray = document.getElementById('waypoints');;
        for (var i = 0; i < checkboxArray.length; i++) {
            waypts.push({
                location: checkboxArray[i].value,
                stopover: true
            });

        }

        directionsService.route({
            origin: document.getElementById('start').value,
            destination: document.getElementById('end').value,
            waypoints: waypts,
            optimizeWaypoints: true,
            travelMode: 'DRIVING'
        }, function (response, status) {
            if (status === 'OK') {
                directionsDisplay.setDirections(response);
                var route = response.routes[0];
                var summaryPanel = document.getElementById('directions-panel');
                summaryPanel.innerHTML = '';
                 //For each route, display summary information.
                //for (var i = 0; i < route.legs.length; i++) {
                //    var routeSegment = i + 1;
                //    summaryPanel.innerHTML += '<b>Route Segment: ' + routeSegment +
                //        '</b><br>';
                //    summaryPanel.innerHTML += route.legs[i].start_address + ' to ';
                //    summaryPanel.innerHTML += route.legs[i].end_address + '<br>';
                //    summaryPanel.innerHTML += route.legs[i].distance.text + '<br><br>';
                //}
            } else {
                window.alert('Directions request failed due to ' + status);
            }
        }
                );
    }
</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCm51Yofz7jCEmtkvN4mFady9iETRhqm_s&callback=initMap">
</script>